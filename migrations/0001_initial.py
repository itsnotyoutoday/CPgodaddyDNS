# Generated by Django 4.2.14 on 2025-09-07 20:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('loginSystem', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GoDaddyConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_key', models.CharField(help_text='GoDaddy API Key', max_length=255)),
                ('api_secret', models.CharField(help_text='GoDaddy API Secret', max_length=255)),
                ('is_active', models.BooleanField(default=False, help_text='Enable GoDaddy DNS sync')),
                ('use_production', models.BooleanField(default=False, help_text='Use production API (vs OTE testing)')),
                ('sync_enabled', models.BooleanField(default=True, help_text='Enable automatic sync')),
                ('conflict_strategy', models.CharField(choices=[('godaddy_wins', 'GoDaddy Takes Precedence'), ('manual', 'Queue for Manual Review'), ('timestamp', 'Use Modification Timestamps')], default='godaddy_wins', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('last_domain_refresh', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='godaddy_config', to='loginSystem.administrator')),
            ],
            options={
                'verbose_name': 'GoDaddy Configuration',
                'verbose_name_plural': 'GoDaddy Configurations',
                'db_table': 'godaddy_config',
            },
        ),
        migrations.CreateModel(
            name='GoDaddySyncLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sync_type', models.CharField(choices=[('scheduled', 'Scheduled Sync'), ('manual', 'Manual Sync'), ('triggered', 'Triggered by Change'), ('initial', 'Initial Import')], max_length=20)),
                ('domain_name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('running', 'In Progress'), ('completed', 'Completed Successfully'), ('failed', 'Failed'), ('partial', 'Completed with Errors')], default='running', max_length=20)),
                ('domains_processed', models.IntegerField(default=0)),
                ('records_created', models.IntegerField(default=0)),
                ('records_updated', models.IntegerField(default=0)),
                ('records_deleted', models.IntegerField(default=0)),
                ('conflicts_resolved', models.IntegerField(default=0)),
                ('errors', models.JSONField(default=list)),
                ('error_message', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_logs', to='godaddyDNS.godaddyconfig')),
            ],
            options={
                'db_table': 'godaddy_sync_log',
                'ordering': ['-started_at'],
                'indexes': [models.Index(fields=['status'], name='godaddy_syn_status_775ec0_idx'), models.Index(fields=['sync_type'], name='godaddy_syn_sync_ty_352187_idx'), models.Index(fields=['started_at'], name='godaddy_syn_started_197a7b_idx')],
            },
        ),
        migrations.CreateModel(
            name='GoDaddyRecordHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.CharField(db_index=True, max_length=255)),
                ('record_name', models.CharField(max_length=255)),
                ('record_type', models.CharField(max_length=10)),
                ('change_type', models.CharField(choices=[('created', 'Record Created'), ('updated', 'Record Updated'), ('deleted', 'Record Deleted'), ('conflict', 'Conflict Detected')], max_length=20)),
                ('change_source', models.CharField(choices=[('local', 'CyberPanel'), ('godaddy', 'GoDaddy'), ('sync', 'Sync Process')], max_length=20)),
                ('old_content', models.TextField(blank=True)),
                ('new_content', models.TextField(blank=True)),
                ('old_ttl', models.IntegerField(blank=True, null=True)),
                ('new_ttl', models.IntegerField(blank=True, null=True)),
                ('old_priority', models.IntegerField(blank=True, null=True)),
                ('new_priority', models.IntegerField(blank=True, null=True)),
                ('conflict_resolved', models.BooleanField(default=False)),
                ('resolution_method', models.CharField(blank=True, max_length=50)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_history', to='godaddyDNS.godaddyconfig')),
            ],
            options={
                'db_table': 'godaddy_record_history',
                'ordering': ['-changed_at'],
                'indexes': [models.Index(fields=['domain_name', 'record_name', 'record_type'], name='godaddy_rec_domain__ea9edb_idx'), models.Index(fields=['change_type'], name='godaddy_rec_change__35c59f_idx'), models.Index(fields=['changed_at'], name='godaddy_rec_changed_e55b8c_idx')],
            },
        ),
        migrations.CreateModel(
            name='GoDaddyDomainCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.CharField(db_index=True, max_length=255)),
                ('status', models.CharField(default='ACTIVE', max_length=50)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('auto_renew', models.BooleanField(default=False)),
                ('hosting_type', models.CharField(choices=[('server_hosted', 'Hosted on Server'), ('external_hosted', 'Hosted Elsewhere'), ('parked', 'Parked/No Hosting'), ('unknown', 'Unable to Determine')], default='unknown', max_length=20)),
                ('points_to_server', models.BooleanField(default=False)),
                ('detected_ips', models.JSONField(default=list, help_text='List of A record IPs detected')),
                ('last_synced', models.DateTimeField(blank=True, null=True)),
                ('sync_enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cached_domains', to='godaddyDNS.godaddyconfig')),
            ],
            options={
                'db_table': 'godaddy_domain_cache',
                'indexes': [models.Index(fields=['domain_name'], name='godaddy_dom_domain__bf5455_idx'), models.Index(fields=['hosting_type'], name='godaddy_dom_hosting_907b76_idx'), models.Index(fields=['points_to_server'], name='godaddy_dom_points__e47a37_idx')],
                'unique_together': {('config', 'domain_name')},
            },
        ),
        migrations.CreateModel(
            name='GoDaddyConflictQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.CharField(db_index=True, max_length=255)),
                ('record_name', models.CharField(max_length=255)),
                ('record_type', models.CharField(max_length=10)),
                ('local_data', models.JSONField(help_text='Local record data')),
                ('godaddy_data', models.JSONField(help_text='GoDaddy record data')),
                ('status', models.CharField(choices=[('pending', 'Awaiting Resolution'), ('resolved_local', 'Resolved - Keep Local'), ('resolved_godaddy', 'Resolved - Keep GoDaddy'), ('resolved_custom', 'Resolved - Custom Value'), ('ignored', 'Ignored/Skipped')], default='pending', max_length=20)),
                ('resolution_data', models.JSONField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflict_queue', to='godaddyDNS.godaddyconfig')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='loginSystem.administrator')),
            ],
            options={
                'db_table': 'godaddy_conflict_queue',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status'], name='godaddy_con_status_7e5640_idx'), models.Index(fields=['domain_name'], name='godaddy_con_domain__d33c4a_idx')],
            },
        ),
    ]
